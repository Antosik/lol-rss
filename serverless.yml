service: lol-rss

app: lol-rss
org: antosik

plugins:
  - serverless-python-requirements

custom:
  S3_BUCKET: ${opt:s3_bucket, "antosik-lol-rss"}
  S3_BUCKET_ARN: arn:aws:s3:::${self:custom.S3_BUCKET}
  S3_RESOURCES: ${self:custom.S3_BUCKET_ARN}/*
  pythonRequirements:
    dockerizePip: non-linux
    layer: true

provider:
  name: aws
  runtime: python3.7
  region: ${opt:region, 'eu-central-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    BUCKET_NAME: ${self:custom.S3_BUCKET}
    S3_REGION: ${self:provider.region}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: ${self:custom.S3_RESOURCES}

package:
  exclude:
    - node_modules/**
    - __pycache__/**
    - .requirements/**
    - venv/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt
    - '*.xml'

functions:
  lolesports:
    handler: handlers/lolesports.handle
    events:
      - schedule: rate(15 minutes)
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
  lolsales:
    handler: handlers/lolsales.handle
    events:
      - schedule: rate(15 minutes)
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
  lolstatus:
    handler: handlers/lolstatus.handle
    events:
      - schedule: rate(15 minutes)
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
  lolnews:
    handler: handlers/lolnews.handle
    events:
      - schedule: rate(15 minutes)
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
